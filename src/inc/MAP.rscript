;
; Load the current level
;
#label load_level
	If !LEVEL = 1 Then Restore @map1$
	If !LEVEL = 2 Then Restore @map2$
	If !LEVEL = 3 Then Restore @map3$
	If !LEVEL = 4 Then Restore @map4$
	If !LEVEL = 5 Then Restore @map5$
	If !LEVEL = 6 Then Restore @map6$
	If !LEVEL = 7 Then Restore @map7$
	If !LEVEL = 8 Then Restore @map8$
	If !LEVEL = 9 Then Restore @map9$
	If !LEVEL = 10 Then Restore @map10$
	If !LEVEL = 11 Then Restore @map11$
	If !LEVEL = 12 Then Restore @map12$
	If !LEVEL = 13 Then Restore @map13$
	If !LEVEL = 14 Then Restore @map14$
	If !LEVEL = 15 Then Restore @map15$
	If !LEVEL = 16 Then Restore @map16$
	
	Init 0,0: !MAP_POS = 1 : !NUM_LASER = 0
#label read_data1
	If !MAP_POS > 160 Then Goto @stop_read
	
#label read_data2
	Read !NUM_TILES,!TILE_VALUE/
	For !FOR_VAR = 0 To !NUM_TILES - 1 : !MAP( !MAP_POS + !FOR_VAR ) = !TILE_VALUE : Next !FOR_VAR
	!MAP_POS = !MAP_POS + !NUM_TILES/

	If !MAP_POS > 160 Then Goto @stop_read
	Goto @read_data2/
	Goto @read_data1

#label stop_read
;	For !FOR_VAR = 1 To 160
;		Print Str$( !MAP( !FOR_VAR ) );
;	Next !FOR_VAR
;	End
	Return

;
; Show the current level
;
#label show_level
	!MAP_X = 4 : !MAP_Y = 2 : !NUM_STAR = 0 : !NUM_KEY = 0 : !MAP_POS = 1 : !ADR_DOOR = 0 : !ADR_PLAYER = 0 : !NUM_TELEPORTER = 1
#label draw_line1
	!COLUMN = 1
		
#label draw_line2

	!TILE_VALUE = !MAP( !MAP_POS )/
	Eg !LEVEL_COLOR,0,0 : CursorX !MAP_X : CursorY !MAP_Y
	
	; Vide
	If !TILE_VALUE = 0 Then Print *Chr$( 111 )+*Chr$( 111 )+!BREAK$+*Chr$( 111 )+*Chr$( 111 )
	
	; Mur
	If !TILE_VALUE = 1 Then Print *Chr$( 32 )+*Chr$( 33 )+!BREAK$+*Chr$( 70 )+*Chr$( 71 )
	
	; Sol
	If !TILE_VALUE = 2 Then Print Chr$( 34 )+Chr$( 34 )+!BREAK$+Chr$( 34 )+Chr$( 34 )
	
	; Elevator
	If !TILE_VALUE = 3 Then Print *Chr$( 35 )+*Chr$( 36 )+!BREAK$+*Chr$( 72 )+*Chr$( 73 )
	
	; Teleporter
	If !TILE_VALUE = 4 Then Print *Chr$( 37 )+*Chr$( 38 )+!BREAK$+*Chr$( 74 )+*Chr$( 75 ) : !TELEPORT( !NUM_TELEPORTER ) = !MAP_X : !TELEPORT( !NUM_TELEPORTER + 1 ) = !MAP_Y : !TELEPORT( !NUM_TELEPORTER + 2 ) = !MAP_POS : !NUM_TELEPORTER = !NUM_TELEPORTER + 3 
	
	; Dalle cassable
	If !TILE_VALUE = 5 Then Print *Chr$( 39 )+*Chr$( 40 )+!BREAK$+*Chr$( 76 )+*Chr$( 77 )
	
	; Porte fermée
	If !TILE_VALUE = 6 Then Print *Chr$( 41 )+*Chr$( 42 )+!BREAK$+*Chr$( 78 )+*Chr$( 79 ) : !DOOR_X = !MAP_X : !DOOR_Y = !MAP_Y : !ADR_DOOR = !MAP_POS
	
	; Interrupteur ON
	If !TILE_VALUE = 8 Then Print *Chr$( 45 )+*Chr$( 46 )+!BREAK$+*Chr$( 82 )+*Chr$( 83 )
	
	; Mabool sol
	If !TILE_VALUE = 11 Then Print *Chr$( 50 )+*Chr$( 51 )+!BREAK$+*Chr$( 88 )+*Chr$( 89 ) : !PLAYER_X = !MAP_X : !PLAYER_Y = !MAP_Y : !ADR_PLAYER = !MAP_POS : !MAP(!ADR_PLAYER) = 2
	
	; Etoile sol
	If !TILE_VALUE = 16 Then Print *Chr$( 60 )+*Chr$( 61 )+!BREAK$+*Chr$( 98 )+*Chr$( 99 ) : !NUM_STAR = !NUM_STAR + 1
	
	; Clé sol
	If !TILE_VALUE = 18 Then Print *Chr$( 64 )+*Chr$( 65 )+!BREAK$+*Chr$( 102 )+*Chr$( 103 ) : !NUM_KEY = !NUM_KEY + 1
	
	; Bombe sol
	If !TILE_VALUE = 20 Then Print *Chr$( 68 )+*Chr$( 69 )+!BREAK$+*Chr$( 106 )+*Chr$( 107 )
	
	; Laser Horiz
	If !TILE_VALUE = 21 Then Print *Chr$( 108 )+*Chr$( 109 )+!BREAK$+*Chr$( 108 )+*Chr$( 109 ) : !NUM_LASER = !NUM_LASER + 1 : !LASER(!NUM_LASER)=!MAP_POS : !LASER_X(!NUM_LASER)=!MAP_X:!LASER_Y(!NUM_LASER)=!MAP_Y
	
	; Laser Vertic
	If !TILE_VALUE = 22 Then Print *Chr$( 110 )+*Chr$( 110 )+!BREAK$+*Chr$( 114 )+*Chr$( 114 ) : !NUM_LASER = !NUM_LASER + 1 : !LASER(!NUM_LASER)=!MAP_POS : !LASER_X(!NUM_LASER)=!MAP_X:!LASER_Y(!NUM_LASER)=!MAP_Y

	; box
	If !TILE_VALUE = 41 Then Print *Chr$( 112 )+*Chr$( 113 )+!BREAK$+*Chr$( 116 )+*Chr$( 117 )

	!MAP_X = !MAP_X + 2 : !MAP_POS = !MAP_POS + 1/

	Et 7,0,0 : CursorX 10 : CursorY 24/
	Print "LOADING_STAGE..." + Str$( Int( ( 100 / 160 ) * !MAP_POS ) ) + "_%";/
	!COLUMN = !COLUMN + 1
	If !COLUMN = 17 Then !MAP_Y = !MAP_Y + 2 : !MAP_X = 4 : !COLUMN=1
	If !MAP_POS < 160 Then Goto @draw_line2
	
	Tx 7,0,0 : CursorX 0 : CursorY 24 : Print SPC(39);/
	Gosub @update_infos/
	!TXT1$ = ""/
	Return
